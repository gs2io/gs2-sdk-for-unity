// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: relay.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Gs2.Gs2Realtime.Message {

  /// <summary>Holder for reflection information generated from relay.proto</summary>
  public static partial class RelayReflection {

    #region Descriptor
    /// <summary>File descriptor for relay.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static RelayReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CgtyZWxheS5wcm90byJUChJSZWxheUJpbmFyeU1lc3NhZ2USFAoMY29ubmVj",
            "dGlvbklkGAEgASgNEgwKBGRhdGEYAiABKAwSGgoSdGFyZ2V0Q29ubmVjdGlv",
            "bklkGAMgAygNQjMKF2lvLmdzMi5yZWFsdGltZS5tZXNzYWdlqgIXR3MyLkdz",
            "MlJlYWx0aW1lLk1lc3NhZ2ViBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Gs2.Gs2Realtime.Message.RelayBinaryMessage), global::Gs2.Gs2Realtime.Message.RelayBinaryMessage.Parser, new[]{ "ConnectionId", "Data", "TargetConnectionId" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class RelayBinaryMessage : pb::IMessage<RelayBinaryMessage> {
    private static readonly pb::MessageParser<RelayBinaryMessage> _parser = new pb::MessageParser<RelayBinaryMessage>(() => new RelayBinaryMessage());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RelayBinaryMessage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Gs2.Gs2Realtime.Message.RelayReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RelayBinaryMessage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RelayBinaryMessage(RelayBinaryMessage other) : this() {
      connectionId_ = other.connectionId_;
      data_ = other.data_;
      targetConnectionId_ = other.targetConnectionId_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RelayBinaryMessage Clone() {
      return new RelayBinaryMessage(this);
    }

    /// <summary>Field number for the "connectionId" field.</summary>
    public const int ConnectionIdFieldNumber = 1;
    private uint connectionId_;
    /// <summary>
    /// 送信元コネクションID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint ConnectionId {
      get { return connectionId_; }
      set {
        connectionId_ = value;
      }
    }

    /// <summary>Field number for the "data" field.</summary>
    public const int DataFieldNumber = 2;
    private pb::ByteString data_ = pb::ByteString.Empty;
    /// <summary>
    /// バイナリデータ
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Data {
      get { return data_; }
      set {
        data_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "targetConnectionId" field.</summary>
    public const int TargetConnectionIdFieldNumber = 3;
    private static readonly pb::FieldCodec<uint> _repeated_targetConnectionId_codec
        = pb::FieldCodec.ForUInt32(26);
    private readonly pbc::RepeatedField<uint> targetConnectionId_ = new pbc::RepeatedField<uint>();
    /// <summary>
    /// 送信先コネクションID / 省略するとブロードキャスト
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<uint> TargetConnectionId {
      get { return targetConnectionId_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RelayBinaryMessage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RelayBinaryMessage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ConnectionId != other.ConnectionId) return false;
      if (Data != other.Data) return false;
      if(!targetConnectionId_.Equals(other.targetConnectionId_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ConnectionId != 0) hash ^= ConnectionId.GetHashCode();
      if (Data.Length != 0) hash ^= Data.GetHashCode();
      hash ^= targetConnectionId_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ConnectionId != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(ConnectionId);
      }
      if (Data.Length != 0) {
        output.WriteRawTag(18);
        output.WriteBytes(Data);
      }
      targetConnectionId_.WriteTo(output, _repeated_targetConnectionId_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ConnectionId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ConnectionId);
      }
      if (Data.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Data);
      }
      size += targetConnectionId_.CalculateSize(_repeated_targetConnectionId_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RelayBinaryMessage other) {
      if (other == null) {
        return;
      }
      if (other.ConnectionId != 0) {
        ConnectionId = other.ConnectionId;
      }
      if (other.Data.Length != 0) {
        Data = other.Data;
      }
      targetConnectionId_.Add(other.targetConnectionId_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            ConnectionId = input.ReadUInt32();
            break;
          }
          case 18: {
            Data = input.ReadBytes();
            break;
          }
          case 26:
          case 24: {
            targetConnectionId_.AddEntriesFrom(input, _repeated_targetConnectionId_codec);
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
